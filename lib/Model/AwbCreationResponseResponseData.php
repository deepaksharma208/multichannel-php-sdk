<?php
/**
 * AwbCreationResponseResponseData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ShiprocketAPI
 *
 * Welcome to ShipRocket’s API Documentation. Get a clear understanding of all the sections and codes that are used in ShipRocket’s API. ShipRocket API uses the JSON syntax.     First you need to register with ShipRocket and create an account. Simply click on this [link](https://app.shiprocket.in/register) to complete the simple sign up process.    Please note that to utilise the ShipRocket API's, you need to [upgrade](https://app.shiprocket.in/billing-plan-details) your plan to Advance or Pro. To get access to use the API's, you need to call to +91-9266623006 our customer care or send a mail to srs@kartrocket.com, stating that you would like to use ShipRocket Open API's. After that you will have to provide an alternate email id which will be used for the ShipRocket API.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * AwbCreationResponseResponseData Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AwbCreationResponseResponseData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AwbCreationResponse_response_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'courier_company_id' => 'int',
        'awb_code' => 'string',
        'cod' => 'int',
        'order_id' => 'int',
        'shipment_id' => 'int',
        'freight_percentage' => 'string',
        'flat_charges' => 'string',
        'awb_code_status' => 'int',
        'assigned_date_time' => '\Swagger\Client\Model\AwbCreationResponseResponseDataAssignedDateTime',
        'applied_weight' => 'string',
        'company_id' => 'int',
        'company_address_id' => 'int',
        'id' => 'int',
        'applied_weight_amount' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'courier_company_id' => null,
        'awb_code' => null,
        'cod' => null,
        'order_id' => null,
        'shipment_id' => null,
        'freight_percentage' => null,
        'flat_charges' => null,
        'awb_code_status' => null,
        'assigned_date_time' => null,
        'applied_weight' => null,
        'company_id' => null,
        'company_address_id' => null,
        'id' => null,
        'applied_weight_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'courier_company_id' => 'courier_company_id',
        'awb_code' => 'awb_code',
        'cod' => 'cod',
        'order_id' => 'order_id',
        'shipment_id' => 'shipment_id',
        'freight_percentage' => 'freight_percentage',
        'flat_charges' => 'flat_charges',
        'awb_code_status' => 'awb_code_status',
        'assigned_date_time' => 'assigned_date_time',
        'applied_weight' => 'applied_weight',
        'company_id' => 'company_id',
        'company_address_id' => 'company_address_id',
        'id' => 'id',
        'applied_weight_amount' => 'applied_weight_amount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'courier_company_id' => 'setCourierCompanyId',
        'awb_code' => 'setAwbCode',
        'cod' => 'setCod',
        'order_id' => 'setOrderId',
        'shipment_id' => 'setShipmentId',
        'freight_percentage' => 'setFreightPercentage',
        'flat_charges' => 'setFlatCharges',
        'awb_code_status' => 'setAwbCodeStatus',
        'assigned_date_time' => 'setAssignedDateTime',
        'applied_weight' => 'setAppliedWeight',
        'company_id' => 'setCompanyId',
        'company_address_id' => 'setCompanyAddressId',
        'id' => 'setId',
        'applied_weight_amount' => 'setAppliedWeightAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'courier_company_id' => 'getCourierCompanyId',
        'awb_code' => 'getAwbCode',
        'cod' => 'getCod',
        'order_id' => 'getOrderId',
        'shipment_id' => 'getShipmentId',
        'freight_percentage' => 'getFreightPercentage',
        'flat_charges' => 'getFlatCharges',
        'awb_code_status' => 'getAwbCodeStatus',
        'assigned_date_time' => 'getAssignedDateTime',
        'applied_weight' => 'getAppliedWeight',
        'company_id' => 'getCompanyId',
        'company_address_id' => 'getCompanyAddressId',
        'id' => 'getId',
        'applied_weight_amount' => 'getAppliedWeightAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['courier_company_id'] = isset($data['courier_company_id']) ? $data['courier_company_id'] : null;
        $this->container['awb_code'] = isset($data['awb_code']) ? $data['awb_code'] : null;
        $this->container['cod'] = isset($data['cod']) ? $data['cod'] : null;
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['shipment_id'] = isset($data['shipment_id']) ? $data['shipment_id'] : null;
        $this->container['freight_percentage'] = isset($data['freight_percentage']) ? $data['freight_percentage'] : null;
        $this->container['flat_charges'] = isset($data['flat_charges']) ? $data['flat_charges'] : null;
        $this->container['awb_code_status'] = isset($data['awb_code_status']) ? $data['awb_code_status'] : null;
        $this->container['assigned_date_time'] = isset($data['assigned_date_time']) ? $data['assigned_date_time'] : null;
        $this->container['applied_weight'] = isset($data['applied_weight']) ? $data['applied_weight'] : null;
        $this->container['company_id'] = isset($data['company_id']) ? $data['company_id'] : null;
        $this->container['company_address_id'] = isset($data['company_address_id']) ? $data['company_address_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['applied_weight_amount'] = isset($data['applied_weight_amount']) ? $data['applied_weight_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets courier_company_id
     *
     * @return int
     */
    public function getCourierCompanyId()
    {
        return $this->container['courier_company_id'];
    }

    /**
     * Sets courier_company_id
     *
     * @param int $courier_company_id id of the courier company
     *
     * @return $this
     */
    public function setCourierCompanyId($courier_company_id)
    {
        $this->container['courier_company_id'] = $courier_company_id;

        return $this;
    }

    /**
     * Gets awb_code
     *
     * @return string
     */
    public function getAwbCode()
    {
        return $this->container['awb_code'];
    }

    /**
     * Sets awb_code
     *
     * @param string $awb_code The AWB code generated
     *
     * @return $this
     */
    public function setAwbCode($awb_code)
    {
        $this->container['awb_code'] = $awb_code;

        return $this;
    }

    /**
     * Gets cod
     *
     * @return int
     */
    public function getCod()
    {
        return $this->container['cod'];
    }

    /**
     * Sets cod
     *
     * @param int $cod If there is COD then response =1, else it will be 0
     *
     * @return $this
     */
    public function setCod($cod)
    {
        $this->container['cod'] = $cod;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return int
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param int $order_id Order id as generated earlier
     *
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets shipment_id
     *
     * @return int
     */
    public function getShipmentId()
    {
        return $this->container['shipment_id'];
    }

    /**
     * Sets shipment_id
     *
     * @param int $shipment_id Shipment id as generated in the shipment section
     *
     * @return $this
     */
    public function setShipmentId($shipment_id)
    {
        $this->container['shipment_id'] = $shipment_id;

        return $this;
    }

    /**
     * Gets freight_percentage
     *
     * @return string
     */
    public function getFreightPercentage()
    {
        return $this->container['freight_percentage'];
    }

    /**
     * Sets freight_percentage
     *
     * @param string $freight_percentage 
     *
     * @return $this
     */
    public function setFreightPercentage($freight_percentage)
    {
        $this->container['freight_percentage'] = $freight_percentage;

        return $this;
    }

    /**
     * Gets flat_charges
     *
     * @return string
     */
    public function getFlatCharges()
    {
        return $this->container['flat_charges'];
    }

    /**
     * Sets flat_charges
     *
     * @param string $flat_charges 
     *
     * @return $this
     */
    public function setFlatCharges($flat_charges)
    {
        $this->container['flat_charges'] = $flat_charges;

        return $this;
    }

    /**
     * Gets awb_code_status
     *
     * @return int
     */
    public function getAwbCodeStatus()
    {
        return $this->container['awb_code_status'];
    }

    /**
     * Sets awb_code_status
     *
     * @param int $awb_code_status 
     *
     * @return $this
     */
    public function setAwbCodeStatus($awb_code_status)
    {
        $this->container['awb_code_status'] = $awb_code_status;

        return $this;
    }

    /**
     * Gets assigned_date_time
     *
     * @return \Swagger\Client\Model\AwbCreationResponseResponseDataAssignedDateTime
     */
    public function getAssignedDateTime()
    {
        return $this->container['assigned_date_time'];
    }

    /**
     * Sets assigned_date_time
     *
     * @param \Swagger\Client\Model\AwbCreationResponseResponseDataAssignedDateTime $assigned_date_time assigned_date_time
     *
     * @return $this
     */
    public function setAssignedDateTime($assigned_date_time)
    {
        $this->container['assigned_date_time'] = $assigned_date_time;

        return $this;
    }

    /**
     * Gets applied_weight
     *
     * @return string
     */
    public function getAppliedWeight()
    {
        return $this->container['applied_weight'];
    }

    /**
     * Sets applied_weight
     *
     * @param string $applied_weight 
     *
     * @return $this
     */
    public function setAppliedWeight($applied_weight)
    {
        $this->container['applied_weight'] = $applied_weight;

        return $this;
    }

    /**
     * Gets company_id
     *
     * @return int
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param int $company_id 
     *
     * @return $this
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets company_address_id
     *
     * @return int
     */
    public function getCompanyAddressId()
    {
        return $this->container['company_address_id'];
    }

    /**
     * Sets company_address_id
     *
     * @param int $company_address_id 
     *
     * @return $this
     */
    public function setCompanyAddressId($company_address_id)
    {
        $this->container['company_address_id'] = $company_address_id;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id 
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets applied_weight_amount
     *
     * @return int
     */
    public function getAppliedWeightAmount()
    {
        return $this->container['applied_weight_amount'];
    }

    /**
     * Sets applied_weight_amount
     *
     * @param int $applied_weight_amount 
     *
     * @return $this
     */
    public function setAppliedWeightAmount($applied_weight_amount)
    {
        $this->container['applied_weight_amount'] = $applied_weight_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


